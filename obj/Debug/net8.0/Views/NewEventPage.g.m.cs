//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vaulinv.Views
{
#nullable disable

	[global::System.CodeDom.Compiler.GeneratedCode("CompiledBindings", null)]
	partial class NewEventPage
	{
		private global::Microsoft.Maui.Controls.Entry entry1;
		private global::Microsoft.Maui.Controls.Entry entry2;
		private global::Vaulinv.Controls.DateTimePicker dateTimePicker1;
		private global::Vaulinv.Controls.DateTimePicker dateTimePicker2;
		private global::Microsoft.Maui.Controls.Editor editor1;
		private global::Microsoft.Maui.Controls.Button button1;
		private global::Microsoft.Maui.Controls.Button button2;
		private bool _generatedCodeInitialized;

		private void InitializeAfterConstructor()
		{
			if (_generatedCodeInitialized)
				return;

			_generatedCodeInitialized = true;

			entry1 = global::Microsoft.Maui.Controls.NameScopeExtensions.FindByName<global::Microsoft.Maui.Controls.Entry>(this, "entry1");
			entry2 = global::Microsoft.Maui.Controls.NameScopeExtensions.FindByName<global::Microsoft.Maui.Controls.Entry>(this, "entry2");
			dateTimePicker1 = global::Microsoft.Maui.Controls.NameScopeExtensions.FindByName<global::Vaulinv.Controls.DateTimePicker>(this, "dateTimePicker1");
			dateTimePicker2 = global::Microsoft.Maui.Controls.NameScopeExtensions.FindByName<global::Vaulinv.Controls.DateTimePicker>(this, "dateTimePicker2");
			editor1 = global::Microsoft.Maui.Controls.NameScopeExtensions.FindByName<global::Microsoft.Maui.Controls.Editor>(this, "editor1");
			button1 = global::Microsoft.Maui.Controls.NameScopeExtensions.FindByName<global::Microsoft.Maui.Controls.Button>(this, "button1");
			button2 = global::Microsoft.Maui.Controls.NameScopeExtensions.FindByName<global::Microsoft.Maui.Controls.Button>(this, "button2");


			this.BindingContextChanged += this_BindingContextChanged;
			if (this.BindingContext is global::Vaulinv.ViewModels.NewEventViewModel dataRoot0)
			{
				Bindings_this.Initialize(this, dataRoot0);
			}
		}

		private void this_BindingContextChanged(object sender, global::System.EventArgs e)
		{
			Bindings_this.Cleanup();
			if (((global::Microsoft.Maui.Controls.Element)sender).BindingContext is global::Vaulinv.ViewModels.NewEventViewModel dataRoot)
			{
				Bindings_this.Initialize(this, dataRoot);
			}
		}

		NewEventPage_Bindings_this Bindings_this = new NewEventPage_Bindings_this();

		class NewEventPage_Bindings_this
		{
			NewEventPage _targetRoot;
			global::Vaulinv.ViewModels.NewEventViewModel _dataRoot;
			NewEventPage_BindingsTrackings_this _bindingsTrackings;

			public void Initialize(NewEventPage targetRoot, global::Vaulinv.ViewModels.NewEventViewModel dataRoot)
			{
				_targetRoot = targetRoot;
				_dataRoot = dataRoot;
				_bindingsTrackings = new NewEventPage_BindingsTrackings_this(this);

				Update();

				_bindingsTrackings.SetPropertyChangedEventHandler0(dataRoot);
			}

			public void Cleanup()
			{
				if (_targetRoot != null)
				{
					_bindingsTrackings.Cleanup();
					_dataRoot = null;
					_targetRoot = null;
				}
			}

			public void Update()
			{
				var dataRoot = _dataRoot;
				Update0(dataRoot);
			}

			private void Update0(global::Vaulinv.ViewModels.NewEventViewModel value)
			{
				Update0_Event(value);
				Update0_Title(value);
				Update0_SaveCommand(value);
				Update0_CancelCommand(value);
			}

			private void Update1(global::Vaulinv.Models.Event value)
			{
				Update1_StartsAt(value);
				Update1_EndsAt(value);
				Update1_Name(value);
				Update1_Location(value);
				Update1_Notes(value);
			}

			private void Update0_Title(global::Vaulinv.ViewModels.NewEventViewModel value)
			{
#line (15, 5) - (15, 26) 15 "..\..\..\..\Views\NewEventPage.xaml"
				_targetRoot.Title = value.Title;
#line default
			}

			private void Update0_Event(global::Vaulinv.ViewModels.NewEventViewModel value)
			{
#line (21, 17) - (21, 42) 21 "..\..\..\..\Views\NewEventPage.xaml"
				var value1 = value.Event;
#line default
				Update1(value1);
				_bindingsTrackings.SetPropertyChangedEventHandler1(value1);
			}

			private void Update0_SaveCommand(global::Vaulinv.ViewModels.NewEventViewModel value)
			{
#line (45, 21) - (45, 50) 45 "..\..\..\..\Views\NewEventPage.xaml"
				_targetRoot.button1.Command = value.SaveCommand;
#line default
			}

			private void Update0_CancelCommand(global::Vaulinv.ViewModels.NewEventViewModel value)
			{
#line (49, 21) - (49, 52) 49 "..\..\..\..\Views\NewEventPage.xaml"
				_targetRoot.button2.Command = value.CancelCommand;
#line default
			}

			private void Update1_Name(global::Vaulinv.Models.Event value)
			{
#line (21, 17) - (21, 42) 21 "..\..\..\..\Views\NewEventPage.xaml"
				_targetRoot.entry1.Text = value.Name;
#line default
			}

			private void Update1_Location(global::Vaulinv.Models.Event value)
			{
#line (25, 17) - (25, 46) 25 "..\..\..\..\Views\NewEventPage.xaml"
				_targetRoot.entry2.Text = value.Location;
#line default
			}

			private void Update1_StartsAt(global::Vaulinv.Models.Event value)
			{
#line (30, 17) - (30, 51) 30 "..\..\..\..\Views\NewEventPage.xaml"
				var value1 = value.StartsAt;
#line (30, 17) - (30, 51) 30 "..\..\..\..\Views\NewEventPage.xaml"
				_targetRoot.dateTimePicker1.Date = value1.Date;
#line (32, 17) - (32, 56) 32 "..\..\..\..\Views\NewEventPage.xaml"
				_targetRoot.dateTimePicker1.Time = value1.TimeOfDay;
#line default
			}

			private void Update1_EndsAt(global::Vaulinv.Models.Event value)
			{
#line (35, 17) - (35, 49) 35 "..\..\..\..\Views\NewEventPage.xaml"
				var value1 = value.EndsAt;
#line (35, 17) - (35, 49) 35 "..\..\..\..\Views\NewEventPage.xaml"
				_targetRoot.dateTimePicker2.Date = value1.Date;
#line (37, 17) - (37, 54) 37 "..\..\..\..\Views\NewEventPage.xaml"
				_targetRoot.dateTimePicker2.Time = value1.TimeOfDay;
#line default
			}

			private void Update1_Notes(global::Vaulinv.Models.Event value)
			{
#line (39, 17) - (39, 43) 39 "..\..\..\..\Views\NewEventPage.xaml"
				_targetRoot.editor1.Text = value.Notes;
#line default
			}

			class NewEventPage_BindingsTrackings_this
			{
				global::System.WeakReference _bindingsWeakRef;
				global::System.ComponentModel.INotifyPropertyChanged _propertyChangeSource0;
				global::System.ComponentModel.INotifyPropertyChanged _propertyChangeSource1;

				public NewEventPage_BindingsTrackings_this(NewEventPage_Bindings_this bindings)
				{
					_bindingsWeakRef = new global::System.WeakReference(bindings);
				}

				public void Cleanup()
				{
					SetPropertyChangedEventHandler0(null);
					SetPropertyChangedEventHandler1(null);
				}

				public void SetPropertyChangedEventHandler0(global::Vaulinv.ViewModels.NewEventViewModel value)
				{
					global::CompiledBindings.MAUI.CompiledBindingsHelper.SetPropertyChangedEventHandler(ref _propertyChangeSource0, value, OnPropertyChanged0);
				}

				public void SetPropertyChangedEventHandler1(global::Vaulinv.Models.Event value)
				{
					global::CompiledBindings.MAUI.CompiledBindingsHelper.SetPropertyChangedEventHandler(ref _propertyChangeSource1, value, OnPropertyChanged1);
				}

				private void OnPropertyChanged0(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
				{
					var bindings = global::CompiledBindings.MAUI.CompiledBindingsHelper.TryGetBindings<NewEventPage_Bindings_this>(ref _bindingsWeakRef, Cleanup);
					if (bindings == null)
					{
						return;
					}

					var typedSender = (global::Vaulinv.ViewModels.NewEventViewModel)sender;
					switch (e.PropertyName)
					{
						case null:
						case "":
							bindings.Update0(typedSender);
							break;
						case "Title":
							bindings.Update0_Title(typedSender);
							break;
						case "Event":
							bindings.Update0_Event(typedSender);
							break;
						case "SaveCommand":
							bindings.Update0_SaveCommand(typedSender);
							break;
						case "CancelCommand":
							bindings.Update0_CancelCommand(typedSender);
							break;
					}
				}

				private void OnPropertyChanged1(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
				{
					var bindings = global::CompiledBindings.MAUI.CompiledBindingsHelper.TryGetBindings<NewEventPage_Bindings_this>(ref _bindingsWeakRef, Cleanup);
					if (bindings == null)
					{
						return;
					}

					var typedSender = (global::Vaulinv.Models.Event)sender;
					switch (e.PropertyName)
					{
						case null:
						case "":
							bindings.Update1(typedSender);
							break;
						case "Name":
							bindings.Update1_Name(typedSender);
							break;
						case "Location":
							bindings.Update1_Location(typedSender);
							break;
						case "StartsAt":
							bindings.Update1_StartsAt(typedSender);
							break;
						case "EndsAt":
							bindings.Update1_EndsAt(typedSender);
							break;
						case "Notes":
							bindings.Update1_Notes(typedSender);
							break;
					}
				}
			}
		}
	}
}
